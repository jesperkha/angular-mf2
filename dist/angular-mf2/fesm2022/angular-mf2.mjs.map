{"version":3,"file":"angular-mf2.mjs","sources":["../../../projects/angular-mf2/src/lib/angular-mf2.ts","../../../projects/angular-mf2/src/lib/types.ts","../../../projects/angular-mf2/src/lib/mf2.ts","../../../projects/angular-mf2/src/lib/store.ts","../../../projects/angular-mf2/src/lib/i18n-pipe.ts","../../../projects/angular-mf2/src/public-api.ts","../../../projects/angular-mf2/src/angular-mf2.ts"],"sourcesContent":["import { Component } from '@angular/core';\n\n@Component({\n  selector: 'lib-angular-mf2',\n  imports: [],\n  template: `\n    <p>\n      angular-mf2 works!\n    </p>\n  `,\n  styles: ``\n})\nexport class AngularMf2 {\n\n}\n","\nexport type Catalogs = Record<string, Record<string, string>>; // { 'en': Translation, 'no': Translation }\n\nexport type I18nConfig = {\n  defaultLocale: string;\n  catalogs: Catalogs; // you’ll pass { en, no } here\n};\n\n\nexport const i18nConfig: I18nConfig = {\n  defaultLocale: 'en',\n  catalogs: {\n    en: {\n      hello: 'Hello, {$name}!',\n    },\n    no: {\n      hello: 'Hallo, {$name}!',\n    },\n  }, // TODO:\n  // en: () => import('./locales/en.json').then((m) => m.default),\n};\n","import { MessageFormat, type MessageMarkupPart, type MessagePart } from 'messageformat';\nimport sanitizeHtml from 'sanitize-html';\n\nexport type BaseTranslation = Record<string, string>;\nexport type BaseArguments = Record<string, any>;\n\ntype TranslationGroup<T extends BaseTranslation> = {\n  defaultLocale: string;\n  locales: Record<string, T>;\n};\n\ntype Result<T, E> = { ok: true; value: T } | { ok: false; error: E };\n\nexport function newGroup<T extends BaseTranslation>(\n  defaultLocale: string,\n  locales: Record<string, T>\n): TranslationGroup<T> {\n  if (Object.keys(locales).length === 0) {\n    throw new Error('newGroup: locales object must not be empty');\n  }\n\n  return {\n    defaultLocale,\n    locales,\n  };\n}\n\nexport function generate<T extends BaseTranslation, A extends BaseArguments>(\n  locale: string,\n  group: TranslationGroup<T>,\n  args: A\n): Result<T, string> {\n  // Fallback to default if requested locale is missing\n  if (!(locale in group.locales)) {\n    locale = group.defaultLocale;\n\n    if (!(locale in group.locales)) {\n      return { ok: false, error: 'group has no valid locales' };\n    }\n  }\n\n  const translation = group.locales[locale];\n  const formatted = mf2Format(locale, translation, args);\n\n  return { ok: true, value: formatted as T };\n}\n\nfunction mf2Format<T extends BaseTranslation, A extends BaseArguments>(\n  locale: string,\n  t: T,\n  a: A\n): T {\n  const result: Record<string, string> = {};\n\n  for (const key in t) {\n    if (!Object.prototype.hasOwnProperty.call(t, key)) continue;\n\n    const raw = t[key];\n    const mf2 = new MessageFormat(locale, raw);\n    const parts = mf2.formatToParts(a);\n    const formatted = partsToHtml(parts);\n\n    result[key] = sanitizeHtml(formatted, {\n      allowedTags: ['b', 'i', 'a', 'span'], // Only allow tags used by mf2\n      allowedAttributes: {},\n      disallowedTagsMode: 'escape',\n    });\n  }\n\n  return result as T;\n}\n\nfunction partsToHtml(parts: MessagePart<never>[]): string {\n  const result = [];\n\n  for (const part of parts) {\n    switch (part.type) {\n      case 'text':\n      case 'string':\n        result.push(part.value);\n        break;\n\n      case 'markup':\n        result.push(markupToHtml(part));\n        break;\n    }\n  }\n\n  return result.join('');\n}\n\nfunction markupToHtml(part: MessageMarkupPart): string {\n  const name = part.name?.trim().toLowerCase();\n\n  switch (name) {\n    case 'bold':\n      return part.kind === 'open' ? '<b>' : '</b>';\n    case 'italic':\n      return part.kind === 'open' ? '<i>' : '</i>';\n    case 'error':\n      return part.kind === 'open' ? `<span style=\"color:red\">` : '</span>';\n    case 'link':\n      if (part.options) {\n        return `<a href=\"${(part.options as any)['to']}\">`;\n      }\n      return part.kind === 'open' ? `<a style=\"text-decoration: underline\">` : '</a>';\n    default:\n      return '';\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Catalogs, i18nConfig } from './types';\nimport { generate, newGroup } from './mf2';\n@Injectable({ providedIn: 'root' })\nexport class Store {\n  private locale: string;\n  private defaultLocale: string;\n  private catalogs: Catalogs;\n  log(value: unknown): unknown {\n    console.log(\"logging: \", value)\n    return value\n  }\n  constructor() {\n    const config = i18nConfig;\n    this.defaultLocale = config.defaultLocale;\n    this.locale = this.defaultLocale;\n    this.catalogs = config.catalogs;\n  }\n  setLocale(locale: string) { this.locale = locale; }\n  getLocale(): string { return this.locale; }\n  format(key: string, args?: Record<string, unknown>): string {\n    const group = newGroup(this.getLocale(), this.catalogs || {});\n    const res = generate(this.getLocale(), group as any, args ?? {});\n    if (!res?.ok) return '';\n    const out = (res.value as Record<string, unknown>)[key];\n    return typeof out === 'string' ? out : String(out ?? '');\n  }\n}\n","// i18n.pipe.ts\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Store } from './store';\n\n@Pipe({\n  name: 'i18n',\n  standalone: true,\n  pure: false,                 // <— impure so it re-evaluates when Store changes\n})\nexport class I18nPipe implements PipeTransform {\n  constructor(private store: Store) { }\n\n  transform(key: unknown, args?: Record<string, unknown>): string {\n    const k = key == null ? '' : String(key);\n    this.store.log(k);\n    return this.store.format(k, args);\n  }\n}\n","/*\n * Public API Surface of angular-mf2\n */\n\nexport * from './lib/angular-mf2';\nexport * from './lib/i18n-pipe';\nexport * from './lib/store'\nexport * from './lib/types'\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.Store"],"mappings":"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"}