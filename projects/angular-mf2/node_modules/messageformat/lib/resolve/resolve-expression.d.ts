import type { Expression } from '../data-model/types.ts';
import type { Context } from '../format-context.ts';
import type { MessageFallback } from '../functions/fallback.ts';
import { type MessageString } from '../functions/string.ts';
import type { MessageUnknownValue } from '../functions/unknown.ts';
import type { MessageValue } from '../message-value.ts';
export declare function resolveExpression<T extends string, P extends string>(ctx: Context<T, P>, { arg, functionRef }: Expression): MessageFallback | (MessageString & {
    source: string;
}) | MessageUnknownValue | (MessageValue<T, P> & {
    source: string;
});
